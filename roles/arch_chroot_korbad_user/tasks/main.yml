- name: Check if user exists
  shell: "arch-chroot {{ arch_chroot_mount_path }} id -u {{ github_username }}"
  failed_when: false
  register: user_check
  become: true

- name: Add a new user
  command:
    cmd: arch-chroot {{ arch_chroot_mount_path }} useradd -m -G wheel -s /bin/bash {{ github_username }}
  become: true
  when: user_check.rc != 0

- name: Set user password
  expect:
    command: arch-chroot {{ arch_chroot_mount_path }} passwd {{ github_username }}
    responses:
      "New password": "{{ arch_chroot_user_password }}"
      "Retype new password": "{{ arch_chroot_user_password }}"
  become: true
  vars:
    ansible_ssh_pipelining: yes

- name: Get UID and GID of korbad inside the chroot
  shell: arch-chroot {{ arch_chroot_mount_path }} id -u korbad
  changed_when: false
  register: korbad_uid
  become: true

- name: Get GID of korbad inside the chroot
  shell: arch-chroot {{ arch_chroot_mount_path }} id -g korbad
  changed_when: false
  register: korbad_gid
  become: true

- name: Create .ssh directory for user
  ansible.builtin.file:
    path: "{{ arch_chroot_mount_path }}/home/{{ github_username }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ korbad_uid.stdout }}"
    group: "{{ korbad_gid.stdout }}"
  become: true

- name: Add public key to authorized_keys
  ansible.posix.authorized_key:
    key: "https://github.com/{{ github_username }}.keys"
    manage_dir: false
    path: "{{ arch_chroot_mount_path }}/home/{{ github_username }}/.ssh/authorized_keys"
    user: "{{ github_username }}"
  become: true
  vars:
    ansible_ssh_pipelining: yes

- name: Update ownership of authorized_keys
  ansible.builtin.file:
    path: "{{ arch_chroot_mount_path }}/home/{{ github_username }}/.ssh/authorized_keys"
    owner: "{{ korbad_uid.stdout }}"
    group: "{{ korbad_gid.stdout }}"
    mode: '0600'
  become: true

- name: Manage /etc/sudoers.d directory
  file:
    path: "{{ arch_chroot_mount_path }}/etc/sudoers.d"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true

- name: Manage sudoers file
  community.general.sudoers:
    name: "{{ github_username }}"
    user: "{{ github_username }}"
    commands: ALL
    state: present
    sudoers_path: "{{ arch_chroot_mount_path }}/etc/sudoers.d"
  become: true